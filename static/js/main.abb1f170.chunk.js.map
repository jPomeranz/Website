{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/Contact/Contact.js","components/Main/Main.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","Brand","Nav","className","Link","as","to","icon","faUser","active","href","rel","target","faFolderOpen","faPhone","Home","Container","style","marginTop","Row","Contact","Col","faGithub","faEnvelope","faSteam","Main","exact","path","component","Footer","date","Date","getFullYear","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+UAuCeA,MA3Bf,WACE,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,SACzB,kBAACF,EAAA,EAAOG,MAAR,uBACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,KACrB,kBAAC,IAAD,CAAiBC,KAAMC,MACvB,0BAAML,UAAU,QAAhB,UAEF,kBAACD,EAAA,EAAIE,KAAL,CACEK,QAAQ,EACRC,KAAK,cACLC,IAAI,sBACJC,OAAO,UAEP,kBAAC,IAAD,CAAiBL,KAAMM,MACvB,0BAAMV,UAAU,QAAhB,WAEF,kBAACD,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,YACrB,kBAAC,IAAD,CAAiBC,KAAMO,MACvB,0BAAMX,UAAU,QAAhB,e,wBCbKY,MAff,WACE,OACE,kBAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC7B,kBAACC,EAAA,EAAD,KACE,kR,sBCuCOC,MAtCf,WACE,OACE,kBAACJ,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,QAC7B,0CACA,kBAACG,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,KACE,kBAAC,IAAD,CAAiBZ,KAAMe,MACvB,uBACEZ,KAAK,gCACLC,IAAI,sBACJC,OAAO,SACPT,UAAU,WAJZ,cASF,kBAACgB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAiBZ,KAAMgB,MACvB,uBAAGb,KAAK,6BAA6BP,UAAU,WAA/C,wBAIF,kBAACgB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAiBZ,KAAMiB,MACvB,uBACEd,KAAK,qCACLC,IAAI,sBACJC,OAAO,SACPT,UAAU,WAJZ,eCjBKsB,MAXf,WACE,OACE,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWb,IACjC,kBAAC,IAAD,CAAOY,KAAK,WAAWC,UAAWR,O,MCF3BS,MALf,WACE,IAAMC,EAAO,IAAIC,KACjB,OAAO,yBAAK5B,UAAU,UAAf,yBAAwC2B,EAAKE,cAA7C,OCUMC,MAVf,WACE,OACE,yBAAK9B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEc+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.abb1f170.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faFolderOpen,\n  faPhone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand>Jacob Pomeranz</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link as={Link} to=\"/\">\n          <FontAwesomeIcon icon={faUser} />\n          <span className=\"link\">About</span>\n        </Nav.Link>\n        <Nav.Link\n          active={false}\n          href=\"/resume.pdf\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <FontAwesomeIcon icon={faFolderOpen} />\n          <span className=\"link\">Resume</span>\n        </Nav.Link>\n        <Nav.Link as={Link} to=\"/contact\">\n          <FontAwesomeIcon icon={faPhone} />\n          <span className=\"link\">Contact</span>\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction Home() {\n  return (\n    <Container style={{ marginTop: \"2em\" }}>\n      <Row>\n        <p>\n          Hey there! This is my personal website for testing out new\n          technologies and occasionally rambling about personal projects. In my\n          free time I enjoy hiking, reading, gardening, lifting weights,\n          motorcycling, and wasting time on the interwebs.\n        </p>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub, faSteam } from \"@fortawesome/free-brands-svg-icons\";\nimport \"./Contact.css\";\n\nfunction Contact() {\n  return (\n    <Container style={{ marginTop: \"2em\" }}>\n      <h1>Contact Me</h1>\n      <Col>\n        <Row>\n          <FontAwesomeIcon icon={faGithub} />\n          <a\n            href=\"https://github.com/jPomeranz/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            className=\"conLink\"\n          >\n            jPomeranz\n          </a>\n        </Row>\n        <Row>\n          <FontAwesomeIcon icon={faEnvelope} />\n          <a href=\"mailto:jrp5kb@virginia.edu\" className=\"conLink\">\n            jrp5kb@virginia.edu\n          </a>\n        </Row>\n        <Row>\n          <FontAwesomeIcon icon={faSteam} />\n          <a\n            href=\"https://steamcommunity.com/id/00n/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            className=\"conLink\"\n          >\n            /id/00n\n          </a>\n        </Row>\n      </Col>\n    </Container>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport Contact from \"../Contact/Contact\";\n\nfunction Main() {\n  return (\n    <main>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/contact\" component={Contact} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  const date = new Date();\n  return <div className=\"footer\">{`Â© Copyright ${date.getFullYear()}.`}</div>;\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Footer from \"../Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}